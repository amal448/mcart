{{!--
<link rel="stylesheet" href="/head2/css/tailwind.output.css" />
<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>
<script src="/head2/js/init-alpine.js"></script>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js" defer></script>
<script src="/head2/js/charts-lines.js" defer></script>
<script src="/head2/js/charts-pie.js" defer></script> --}}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js" defer></script>
<main class="h-full overflow-y-auto">




<div class="container-fluid">
    <!-- Card stats -->
    <div class="row mt-3 mb-3">
        <div class="col-xl-3 col-lg-6">
            <div class="card card-stats mb-4 mb-xl-0">
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <h5 class="card-title text-uppercase text-muted mb-0">Total Products</h5>
                        <span class="h2 font-weight-bold mb-0">RS:</span> <span id="today" class="h2 font-weight-bold mb-0">{{Products}}</span>
                        </div>
                        <div class="col-auto">
                            <div class="icon icon-shape bg-danger text-white rounded-circle shadow">
                                <i class="fas fa-chart-bar"></i>
                            </div>
                        </div>
                    </div>
                  
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-lg-6">
            <div class="card card-stats mb-4 mb-xl-0">
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <h5 class="card-title text-uppercase text-muted mb-0">Total Orders</h5>
                            <span class="h2 font-weight-bold mb-0">{{Orders}}</span>
                        </div>
                        <div class="col-auto">
                            <div class="icon icon-shape bg-warning text-white rounded-circle shadow">
                                <i class="fas fa-chart-pie"></i>
                            </div>
                        </div>
                    </div>
                   
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-lg-6">
            <div class="card card-stats mb-4 mb-xl-0">
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <h5 class="card-title text-uppercase text-muted mb-0">Total Revenue</h5>
                            <span class="h2 font-weight-bold mb-0">RS:{{ revenueTotal}}</span>
                        </div>
                        <div class="col-auto">
                            <div class="icon icon-shape bg-yellow text-white rounded-circle shadow">
                                <i class="fas fa-chart-bar"></i>
                            </div>
                        </div>
                    </div>
                  
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-lg-6">
            <div class="card card-stats mb-4 mb-xl-0">
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <h5 class="card-title text-uppercase text-muted mb-0">Users</h5>
                            <span class="h2 font-weight-bold mb-0">{{Users}}</span>
                        </div>
                        <div class="col-auto">
                            <div class="icon icon-shape bg-info text-white rounded-circle shadow">
                                <i class="fas fa-users"></i>
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
  <div class="container-fluid">
    <!-- Card stats -->
  
    <div class="row mt-5">
        <div class="col-md-6">
            <div class="">
                <canvas id="daily"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="">
                <canvas id="weekly" style="width: 50%;"></canvas>
            </div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-md-6">
            <div class="">
                <canvas id="yearly"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="">
                <canvas id="total"></canvas>
            </div>
        </div>
    </div>
</div>
{{!-- <div class="container-fluid">
    <div class="row mt-5 ml-5 mr-5">
        <div class="col" style=" border-radius: 20px; border: solid 3px rgba(255, 26, 104, 1); height: 20rem;">
            <canvas id="bar-chart" class="pt-4"></canvas>
        </div>
    </div>
    <div class="row mt-5 ml-5 mr-5">
        <div class="col" style=" border-radius: 20px; border: solid 3px rgba(255, 26, 104, 1); height: 20rem;">
            <canvas id="circle-chart" class="pt-4"></canvas><canvas id="finalchart"></canvas>
        </div>
    </div>
</div> --}}

        
   

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // DAILY 
    var data = {
        labels: ['Today'],
        datasets: [{
            label: 'Daily Sales',
            data: ['{{ revenueDaily }}'],
            backgroundColor: [
                'rgba(255, 26, 104, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(0, 0, 0, 0.2)'
            ],
            borderColor: [
                'rgba(255, 26, 104, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)',
                'rgba(0, 0, 0, 1)'
            ],
            borderWidth: 1
        }]
    };

    // config 
    var config = {
        type: 'bar',
        data,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    };

    // render init block
    var myChart = new Chart(
        document.getElementById('daily'),
        config
    );

    //WEEKLY
    var data = {
        labels: [1, 2, 3, 4, 5, 6, 7,],
        datasets: [{
            label: 'Weekly Sales',
            data: ["{{ revenueWeekly }}"],
            backgroundColor: [
                'rgba(255, 26, 104, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(0, 0, 0, 0.2)'
            ],
            borderColor: [
                'rgba(255, 26, 104, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)',
                'rgba(0, 0, 0, 1)'
            ],
            borderWidth: 1
        }]
    };

    // config 
    var config = {
        type: 'bar',
        data,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    };

    // render init block
    var myChart = new Chart(
        document.getElementById('weekly'),
        config
    );

    //YEARLY
    var data = {
        labels: [new Date().getFullYear()],
        datasets: [{
            label: 'Yearly Sales',
            data: ["{{ revenueYearly }}"],
            backgroundColor: [
                'rgba(255, 26, 104, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(0, 0, 0, 0.2)'
            ],
            borderColor: [
                'rgba(255, 26, 104, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)',
                'rgba(0, 0, 0, 1)'
            ],
            borderWidth: 1
        }]
    };

    // config 
    var config = {
        type: 'bar',
        data,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    };

    // render init block
    var myChart = new Chart(
        document.getElementById('yearly'),
        config
    );

    //TOTAL REVENUE
    var data = {
        labels: ['Total Revenue'],
        datasets: [{
            label: 'Total Revenue',
            data: ['{{ revenueTotal }}'],
            backgroundColor: [
                'rgba(255, 26, 104, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(0, 0, 0, 0.2)'
            ],
            borderColor: [
                'rgba(255, 26, 104, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)',
                'rgba(0, 0, 0, 1)'
            ],
            borderWidth: 1
        }]
    };

    // config 
    var config = {
        type: 'bar',
        data,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    };

    // render init block
    var myChart = new Chart(
        document.getElementById('total'),
        config
    );



</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>

<script>

    let monthName = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    let monthlyProfit = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    let weekly = [0, 0, 0, 0, 0, 0, 0]
    let weekName = ["Sunday", "Monday", "Tuesday", "WednesDay", "Thursday", "Friday", "Saturday"]
    let paymethod = ["Paypal", "Razorpay", "Cash on Delivery"]
    let payamount = [0, 0, 0]
    let barChart = document.getElementById("bar-chart").getContext('2d')
    let circleChart = document.getElementById("circle-chart").getContext('2d')
    let finalchart = document.getElementById("finalchart").getContext('2d')
    document.addEventListener('DOMContentLoaded', () => {
        fetch('/admin/chart-data',
            {
                method: 'get',
                credentials: 'include',
                headers: { 'Content-Type': 'application/json' }
            }).then(res => res.json()).then(res => {
                let { data, weeklyReport } = res;
                for (i = 0; i < data.length; ++i) {
                    switch (data[i].month) {
                        case 1:
                            monthlyProfit[0] = data[i].total
                            break;
                        case 2:
                            monthlyProfit[1] = data[i].total
                            break;
                        case 3:
                            monthlyProfit[2] = data[i].total
                            break;
                        case 4:
                            monthlyProfit[3] = data[i].total
                            break;
                        case 5:
                            monthlyProfit[4] = data[i].total
                            break;
                        case 6:
                            monthlyProfit[5] = data[i].total
                            break;
                        case 7:
                            monthlyProfit[6] = data[i].total
                            break;
                        case 8:
                            monthlyProfit[7] = data[i].total
                            break;
                        case 9:
                            monthlyProfit[8] = data[i].total
                            break;
                        case 10:
                            monthlyProfit[9] = data[i].total
                            break;
                        case 11:
                            monthlyProfit[10] = data[i].total
                            break;
                        case 12:
                            monthlyProfit[11] = data[i].total
                            break;
                    }
                }
                console.log(monthlyProfit)
                console.log(weeklyReport)
                const months = monthName;
                const data1 = {
                    labels: months,
                    datasets: [{
                        label: 'Monthly sales',
                        backgroundColor: "red",
                        borderColor: 'rgb(255, 99, 132)',
                        data: monthlyProfit,
                    }]
                };
                const monthlyconfig = {
                    type: 'bar',
                    data: data1,
                    options: {}
                };
                let chart1 = new Chart(barChart, monthlyconfig)
                

                for (i = 0; i < weeklyReport.length; ++i) {
                    switch (weeklyReport[i].date) {
                        case 1:
                            weekly[0] = weeklyReport[i].total
                            break;
                        case 2:
                            weekly[1] = weeklyReport[i].total
                            break;
                        case 3:
                            weekly[2] = weeklyReport[i].total
                            break;
                        case 4:
                            weekly[3] = weeklyReport[i].total
                            break;
                        case 5:
                            weekly[4] = weeklyReport[i].total
                            break;
                        case 6:
                            weekly[5] = weeklyReport[i].total
                            break;
                        case 7: weekly[6] = weeklyReport[i].total
                            break;

                    }
                }

                //weekly sales
                const labels = weekName;
                const data2 = {
                    labels: labels,
                    datasets: [{
                        label: 'Weekly sales',
                        backgroundColor: 'red',
                        borderColor: 'red',
                        data: weekly,
                    }]
                };
                const config = {
                    type: 'bar',
                    data: data2,
                    options: {}
                };
                let chart2 = new Chart(circleChart, config)



            })
    })


</script>